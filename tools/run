#!/usr/bin/env sh

log() { printf "%s\n" "$@"; }

invalid() { printf "Invalid option: %s\n" "$*"; }

check_cmd() {
    if ! command -v "$1" >/dev/null; then
        log "Missing $1!"
        case "$1" in
            air) log "Install it with 'go get -u github.com/cosmtrek/air'" ;;
            sassc) log "Install 'sassc' with your package manager" ;;
            inotify*) log "Install 'notify-tools' with your package manager" ;;
        esac
        return 1
    fi
}

check_dir() {
    pwd="$(pwd)"
    cd "${pwd%/tools}"
}

export_secrets() {
    set -a 
    source ./.auth
    set +a
}

prod() {
    log "prod"
    check_dir
    export_secrets
    env PORT=":${2:-3001}" \
        DB="${3:-prod.db}" \
        SALT="${4:15}" \
        ./userstyles.world
}

sass() {
    log "sass"
    check_cmd sassc
    [ $? = 1 ] && exit
    check_cmd inotifywait
    [ $? = 1 ] && exit

    check_dir
    while inotifywait -r -e close_write scss; do
        sassc --style compressed ./scss/main.scss ./static/css/main.css
    done
}

drop() {
    log "drop"
    check_cmd air
    env DB_DROP="1" \
        DB_COLOR="true" \
        DB_DEBUG="${2:-silent}" \
        DB_RANDOM_DATA="${3:-false}" \
        air -c tools/air.toml
}

dev() {
    log "dev"
    check_cmd air
    check_dir
    export_secrets
    env DB_DEBUG="${2:-silent}" \
        DB_DROP="${3:-false}" \
        DB_COLOR="true" \
        air -c tools/air.toml
}

# This option builds USw executable for use in production.
# To build it on unsupported systems, run `go build` in project root directory.
build() {
    log "build"
    check_dir

    GOOS=linux go build \
        -ldflags '-s -w -extldflags "-fno-PIC -static"' \
        -buildmode pie -tags 'osusergo netgo static_build'
}

ts() {
    log "Compiling typescript"

    env DEBUG="${2:-false}" \
        WATCH="${3:-false}" \
        go run ./typescript/run.go
}

case "$1" in
    build) build "$@" ;;
    dev)  dev    "$@" ;;
    drop) drop   "$@" ;;
    prod) prod   "$@" ;;
    sass) sass   "$@" ;;
    ts) ts       "$@" ;;
    *) invalid   "$@" ;;
esac
